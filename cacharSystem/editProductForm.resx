<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="image.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>